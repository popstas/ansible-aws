---

#user: ubuntu # for ansible?
username: "{{ ansible_user_id }}" # for tasks

private_log_dir: /root/log

locales_present:
  - en_US.UTF-8
  - ru_RU.UTF-8
locales_language_packs_present:
  - language-pack-en
  - language-pack-en-base
  - language-pack-ru
  - language-pack-ru-base

timezone: 'Asia/Yekaterinburg'
ntp_config_server: [ '0.ubuntu.pool.ntp.org', '1.ubuntu.pool.ntp.org', '2.ubuntu.pool.ntp.org', '3.ubuntu.pool.ntp.org' ]

# dns


# exim email
exim4_sender_hostname: "{{ ansible_nodename }}"

# mysql
mysql_datadir: /var/lib/mysql
mysql_innodb_buffer_pool_size: 250M
mysql_ptkill_db: percona


# monit
monit_check_filesystems:
  - { name: rootfs, mountpoint: "/", usage_limit: 90% }

zsh_config_path: /etc/zsh-config

# backups
backups_user: root
backups_dir: /var/backups
backups_mysql_dir: "{{ backups_dir }}/sql"
backups_mysql_remote_user: "{{ backups_user }}"
backups_mysql_remote_dir: "{{ backups_mysql_dir }}/{{ ansible_fqdn }}"
backups_mysql_send_hour: 5 # TODO: not used
backups_mysql_cronjobs:
  - { name: "mysql_backup backup", minute: 32, hour: "5,8,12,16,21",  job: "ionice -c3 mysql_backup backup" }
  - { name: "mysql_backup send",   minute: 42, hour: "5",             job: "ionice -c3 mysql_backup send" }
  - { name: "mysql_backup clean",  minute: 52, hour: "5",             job: "ionice -c3 mysql_backup clean" }

aws_s3_region: "us-west-2"

backups_lsyncd_sources:
  - /etc
  - /usr/local/bin




other_cronjobs: # TODO: cron role with depedencies
  - { name: "detect-viruses", minute: 40, hour: "3",             job: "ionice -c3 detect-viruses /home" }


ssh_public_keys_dir: ssh-public-keys
ssh_public_keys_removed_dir: ssh-public-keys-removed






# diamond, graphite, grafana
diamond_collectors:
  CPUCollector:
    enabled: True
    percore: False
  DiskSpaceCollector:
    enabled: True
  DiskUsageCollector:
    enabled: True
  LoadAverageCollector:
    enabled: True
  MemoryCollector:
    enabled: True
  NetworkCollector:
    enabled: True
  VMStatCollector:
    enabled: True

  # experimental

  EximCollector:
    enabled: True
  FilestatCollector:
    enabled: True
    user_include: ''
  HttpdCollector:
    enabled: True
    urls: "localhost http://{{ apache_host }}:{{ apache_port }}/server-status?auto=1"
  MemcachedCollector:
    enabled: True
    hosts: "localhost:11211"

  NginxCollector:
    enabled: True
    req_path: "/server-status"
    req_port: 80
  SmartCollector:
    enabled: True
  TCPCollector:
    enabled: True
  UptimeCollector:
    enabled: True

  # https://kb.isc.org/article/AA-00769/0/Using-BINDs-XML-statistics-channels.html
  #BindCollector:
  #  enabled: True
  # not work
  ConnTrackCollector:
    enabled: True
  # not work
  MySQLCollector:
    enabled: True
  # not work
  SolrCollector:
    enabled: True
  # not work
  UsersCollector:
    enabled: True
